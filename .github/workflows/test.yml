name: CI

on: [push]

jobs:
  test_proxy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8, 3.9]
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672/tcp
    steps:
    - name: Setup Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Fetch LoansBot/reddit-proxy
      uses: actions/checkout@v2
      with:
        path: ./reddit-proxy
    - name: Fetch LoansBot/logging
      uses: actions/checkout@v2
      with:
        repository: LoansBot/logging
        path: ./logging
    - name: Building working directory
      run: |
        mkdir ./working
        mv ./reddit-proxy/src ./working/src
        mv ./reddit-proxy/tests ./working/tests
        mv ./reddit-proxy/cfg ./working/cfg
        mv ./logging/src/lblogging ./working/src/lblogging
        mv ./reddit-proxy/scripts ./working/scripts
    - name: Generic python setup
      run: |
        python -m pip install --upgrade pip
    - name: Installing logging dependencies
      run: |
        python -m pip install -r ./logging/requirements.txt
    - name: Installing our dependencies
      run: |
        python -m pip install -r ./reddit-proxy/requirements.txt
    - name: Lint with flake8
      working-directory: ./working
      run: |
        flake8 . --count --select=E9,F63,F7,F82,F841,E302,E303,F401,E261 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Fetch LoansBot/database
      uses: actions/checkout@v2
      with:
        repository: LoansBot/database
        path: ./database
    - name: Setup database dependencies
      run: |
        sudo apt update
        sudo apt install -yqq build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev postgresql-common libpq-dev postgresql-client
        python -m pip install -r ./database/requirements.txt
    - name: Initialize database
      working-directory: ./database/src
      run: |
        python run_migrations.py
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: ${{ job.services.postgres.ports['5432'] }}
        DATABASE_USER: postgres
        DATABASE_PASSWORD: dev
        DATABASE_DBNAME: postgres
    - name: Boot up server
      working-directory: ./working/src
      run: |
        python -m pip install supervisor
        supervisord -c ../cfg/supervisor.conf
        supervisorctl start all
        supervisorctl status all
      env:
        USER_AGENT: LoansBot/reddit-proxy tests by /u/Tjstretchalot
        APPNAME: reddit-proxy
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
        AMQP_HOST: localhost
        AMQP_PORT: ${{ job.services.rabbitmq.ports['5672'] }}
        AMQP_USERNAME: guest
        AMQP_PASSWORD: guest
        AMQP_VHOST: /
        AMQP_QUEUE: rproxy
        MIN_TIME_BETWEEN_REQUESTS_S: 2
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        PYTHON_ARGS: -u
        PYTHON_COMMAND: python
    - name: Run integration tests
      working-directory: ./working/tests
      run: |
        python -m unittest discover -s integration
      env:
        AMQP_HOST: localhost
        AMQP_PORT: ${{ job.services.rabbitmq.ports['5672'] }}
        AMQP_USERNAME: guest
        AMQP_PASSWORD: guest
        AMQP_VHOST: /
        AMQP_QUEUE: rproxy
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        REDDIT_MOD_SUBREDDIT: ${{ secrets.REDDIT_MOD_SUBREDDIT }}
    - name: Shutdown server
      if: always()
      run: |
        supervisorctl stop all
        echo "Program log:"
        cat working/src/program.log
        echo "Supervisord log:"
        cat working/src/supervisord.log
        echo "Supervisord pid:"
        cat working/src/supervisord.pid
    - name: Get database logs
      if: always()
      working-directory: working/src
      run: |
        python -m lblogging.query
      env:
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGDATABASE: postgres
        PGUSER: postgres
        PGPASSWORD: dev
